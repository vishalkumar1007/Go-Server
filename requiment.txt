convert this yml into code which reponsibe for fetch the current status of github action deployement , and create a log file if not exist but if exist it update the file with new log data and time.
what i already do : 1. create a repo on the gilab and developer push their code on gilab also i configure the yml file which trigger the gilab pipeline . 2. configure the mirroring with github and get the new push on github 3. configure the github yml file which is reponsibe the trigger the github action and deployed the code . 4. we all know github action pipeline status will appear on the github , so to show this status i add jobs on github yml file : which actually send the status to gitlab , but it only send the status in two stage at the begin : and after action complete (fail and pass)
my requiment : Now , suppose i make chnage and commit to gitlab , then code was go to the github (it take some time) and then github yml trigger action (it also take some time) then deployement start if my deployement take 20min then i have to wait without knowing the current result ,
what i have to do : 1. when it start it create a log file if not exist (name : deployement log) 2. I want to write the code which add the current status of github action deployement in the log file with current timing after every 10sec , until deployement is complete either fail or pass (res came from github) 3. in the code on every 10 second it also update the gitlab stage with status symbol (POST https://gitlab.com/api/v4/projects/:id/statuses/:sha)

code in go lang:
also read the attach pasted file , and guide me to setup folder struct



---------------------------


project-root/
├── main.go                   # Your existing main application
├── main_test.go              # Your existing tests
├── monitor/                  # New monitoring service
│   ├── main.go               # GitHub Actions monitor (created above)
│   ├── config.go             # Configuration management
│   └── go.mod                # Go module for monitor
├── logs/                     # Log files directory
│   └── deployment.log        # Will be created automatically
├── scripts/                  # Deployment and utility scripts
│   ├── start-monitor.sh      # Script to start monitoring
│   └── setup-env.sh          # Environment setup script
├── .env                      # Environment variables (DO NOT commit)
├── .env.example              # Example environment file
├── go.mod                    # Main project Go module
├── go.sum                    # Go module checksums
├── .github/
│   └── workflows/
│       └── deploy.yml        # Your existing GitHub Actions workflow
├── .gitlab-ci.yml            # Your existing GitLab CI configuration
└── README.md                 # Documentation

