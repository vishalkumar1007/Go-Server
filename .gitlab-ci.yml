# .gitlab-ci.yml
# GitLab CI Pipeline that triggers GitHub Actions workflows & monitors logs

stages:
  - build
  - test
  - deploy-dev
  - deploy-qa
  - deploy-prod
  - deploy-next

variables:
  GO_VERSION: "1.21"
  GITHUB_REPO: "vishalkumar1007/Go-Server"
  GITLAB_PROJECT_ID: "71610967"

# Build Stage
build:
  stage: build
  image: golang:${GO_VERSION}
  script:
    - echo "üèóÔ∏è Building application..."
    - go mod download
    - go build -o app main.go
    - echo "‚úÖ Build completed"
  artifacts:
    paths:
      - app
      - monitor/
    expire_in: 1 hour
  only:
    - main
    - develop
    - /^feature\/.*$/
    - /^bugfix\/.*$/

# Test Stage
test:
  stage: test
  image: golang:${GO_VERSION}
  script:
    - echo "üß™ Running tests..."
    - go mod download
    - go vet ./...
    - go test -v ./...
    - echo "‚úÖ All tests passed"
  only:
    - main
    - develop
    - /^feature\/.*$/
    - /^bugfix\/.*$/

# Template for all deployment environments
.deploy_template: &deploy_template
  image: golang:${GO_VERSION}
  script:
    - echo "üöÄ Triggering GitHub Actions deployment to ${ENVIRONMENT^^}..."
    - echo "üì° Triggering GitHub Workflow Dispatch via API..."
    - >
      curl -s -X POST https://api.github.com/repos/${GITHUB_REPO}/actions/workflows/deploy.yml/dispatches
      -H "Authorization: Bearer ${GITHUB_TOKEN}"
      -H "Accept: application/vnd.github+json"
      -d "{\"ref\":\"${BRANCH_NAME}\", \"inputs\":{\"environment\":\"${ENVIRONMENT}\"}}"
    - echo "üñ•Ô∏è Monitoring GitHub Actions workflow for branch: ${BRANCH_NAME}"
    - cd monitor
    - go mod init github-monitor 2>/dev/null || true
    - go mod tidy
    - go build -o github-monitor main.go
    - export GITHUB_TOKEN="${GITHUB_TOKEN}"
    - export GITHUB_REPO="${GITHUB_REPO}"
    - export GITLAB_TOKEN="${GITLAB_TOKEN}"
    - export GITLAB_PROJECT_ID="${GITLAB_PROJECT_ID}"
    - export BRANCH_NAME="${BRANCH_NAME}"
    - export ENVIRONMENT="${ENVIRONMENT}"
    - export POLL_INTERVAL="10s"
    - echo "üîç Starting real-time GitHub Actions monitoring..."
    - ./github-monitor
  artifacts:
    when: always
    paths:
      - monitor/gitlab-logs/
    expire_in: 1 week
  when: manual
  only:
    - main

# Manual Deploy: DEV
deploy-dev:
  stage: deploy-dev
  variables:
    BRANCH_NAME: "dev"
  <<: *deploy_template

# Manual Deploy: QA
deploy-qa:
  stage: deploy-qa
  variables:
    ENVIRONMENT: "qa"
    BRANCH_NAME: "qa"
  <<: *deploy_template

# Manual Deploy: PROD
deploy-prod:
  stage: deploy-prod
  variables:
    ENVIRONMENT: "prod"
    BRANCH_NAME: "main"
  <<: *deploy_template

# Manual Deploy: NEXT
deploy-next:
  stage: deploy-next
  variables:
    ENVIRONMENT: "next"
    BRANCH_NAME: "next"
  <<: *deploy_template
