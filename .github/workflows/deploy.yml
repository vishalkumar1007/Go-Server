# .github/workflows/deploy.yml
# Manual GitHub Actions workflow triggered by GitLab pipeline

name: Multi-Environment Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod
          - next

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      deploy-timeout: ${{ steps.set-env.outputs.deploy-timeout }}
    steps:
      - name: Set environment & timeout
        id: set-env
        run: |
          ENV="${{ inputs.environment }}"
          case "$ENV" in
            prod) TIMEOUT="20" ;;
            qa) TIMEOUT="15" ;;
            *) TIMEOUT="10" ;;
          esac
          echo "environment=$ENV" >> $GITHUB_OUTPUT
          echo "deploy-timeout=$TIMEOUT" >> $GITHUB_OUTPUT

  deploy:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJson(needs.setup.outputs.deploy-timeout) }}
    environment: ${{ needs.setup.outputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build & Test (${{ needs.setup.outputs.environment }})
        run: |
          go mod download
          go build -o app main.go
          go test -v ./...

      - name: Deploy to ${{ needs.setup.outputs.environment }}
        run: |
          echo "ðŸš€ Deploying to ${{ needs.setup.outputs.environment }} environment..."
          sleep 45
          echo "âœ… Deployment complete!"

  summary:
    needs: [setup, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Deployment Summary
        run: |
          echo "ðŸ“Š Environment: ${{ needs.setup.outputs.environment }}"
          echo "âœ… Deployment job completed."
